AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: InitiateTradesLambda - AWS Lambda function for initiating calendar spread trades

Globals:
  Function:
    Timeout: 300
    MemorySize: 512
    Runtime: java21
    Environment:
      Variables:
        FILTERED_TABLE: !Ref FilteredTickersTable
        ALPACA_SECRET_NAME: !Ref AlpacaSecretName
        ALPACA_API_URL: https://paper-api.alpaca.markets/v2

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name
  
  FilteredTickersTableName:
    Type: String
    Default: FilteredTickersTable
    Description: Name of the DynamoDB table containing filtered tickers
  
  AlpacaSecretName:
    Type: String
    Default: trading/alpaca/credentials
    Description: Name of the Secrets Manager secret containing Alpaca API keys

Resources:
  # DynamoDB Tables
  FilteredTickersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${Environment}-filtered-stocks'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: scanDate
          AttributeType: S
        - AttributeName: ticker
          AttributeType: S
      KeySchema:
        - AttributeName: scanDate
          KeyType: HASH
        - AttributeName: ticker
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Environment
          Value: Production
        - Key: Application
          Value: TradingSystem


  # Lambda Function
  InitiateTradesLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: InitiateTradesLambda
      CodeUri: target/initiate-trades-lambda-1.0.0.jar
      Handler: com.example.InitiateTradesLambda::handleRequest
      Description: Lambda function for initiating calendar spread trades
      MemorySize: 512
      Timeout: 300
      Environment:
        Variables:
          FILTERED_TABLE: !Ref FilteredTickersTable
          ALPACA_SECRET_NAME: !Ref AlpacaSecretName
          ALPACA_API_URL: https://paper-api.alpaca.markets/v2
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref FilteredTickersTable
        - SecretsManagerReadWrite
        - CloudWatchLogsFullAccess
      Tags:
        Environment: Production
        Application: TradingSystem
        Function: InitiateTrades

  # CloudWatch Log Group
  InitiateTradesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${InitiateTradesLambda}'
      RetentionInDays: 30

  # IAM Role for Lambda (if needed for additional permissions)
  InitiateTradesLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: InitiateTradesLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InitiateTradesLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: !GetAtt FilteredTickersTable.Arn
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${AlpacaSecretName}*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

Outputs:
  InitiateTradesLambdaArn:
    Description: ARN of the InitiateTradesLambda function
    Value: !GetAtt InitiateTradesLambda.Arn
    Export:
      Name: !Sub '${AWS::StackName}-InitiateTradesLambdaArn'

  FilteredTickersTableName:
    Description: Name of the FilteredTickersTable
    Value: !Ref FilteredTickersTable
    Export:
      Name: !Sub '${AWS::StackName}-FilteredTickersTableName'


  InitiateTradesLambdaFunctionName:
    Description: Name of the InitiateTradesLambda function
    Value: !Ref InitiateTradesLambda
    Export:
      Name: !Sub '${AWS::StackName}-InitiateTradesLambdaFunctionName'



